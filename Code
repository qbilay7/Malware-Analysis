#from androguard.core.bytecodes.apk import APK
from androguard.core import apk
import zipfile
import pyzipper
#from androguard.core import dvm
import hashlib
import pandas as pd


df = pd.DataFrame()

def updateFrame(permissions, hashName):
   global df
   existing_columns = set(df.columns)
   new_columns = [col for col in permissions if col not in existing_columns]
    
   new_data = pd.DataFrame({permission: 1 for permission in new_columns}, index=[hashName])
   df = pd.concat([df, new_data], axis=1).fillna(0)
   
   for col in df.columns:
      if col in permissions:
         df.loc[hashName, col] = 1

      
    
      
def getHash(file_path):
  sha256 = hashlib.sha256()
  with open(file_path, 'rb') as f:
    for block in iter(lambda: f.read(65536), b''):
      sha256.update(block)
  return sha256.hexdigest()


def extract_apk_features(apk_file_path):

    a = apk.APK(apk_file_path)

    permissions = a.get_permissions()
    hashName = getHash(apk_file_path)
    print("Permissions:", permissions)
    return permissions,hashName,0


def malware_extract_apk_features(zip_file_path, apk_file_name, password):
    
    with pyzipper.AESZipFile(zip_file_path, 'r', compression=pyzipper.ZIP_DEFLATED, encryption=pyzipper.WZ_AES) as zip_ref:
        
        zip_ref.setpassword(password.encode())
        
        
        apk_extract_path = 'Desktop/tmp/'
        zip_ref.extract(apk_file_name, apk_extract_path)
    
    
    extracted_apk_path = apk_extract_path + apk_file_name
    
    a = apk.APK(extracted_apk_path)
    
    permissions = a.get_permissions()
    hashName = getHash(extracted_apk_path)
    print("Permissions:", permissions)
    return permissions,hashName,1



zip_file_path = 'Desktop/Android_Applications/z1.zip'
apk_file_name = '9a18e212ffdd94dd262de2eeab7758657dee156ee2ddebeec6b97df7227ab8be.apk'
password = 'infected'
p1,h1,c1 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p1,h1)

zip_file_path = 'Desktop/Android_Applications/z2.zip'
apk_file_name = '3540915b4d51619ac361012d1dc9065da85d713adc14bd9ce82bf92a16921c83.apk'
password = 'infected'
p2,h2,c2 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p2,h2)

zip_file_path = 'Desktop/Android_Applications/z3.zip'
apk_file_name = '05ff22637856bb0edd57cb710afa0d6f944c977fd1045dbd78ea3fb634fa8fb0.apk'
password = 'infected'
p3,h3,c3 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p3,h3)

zip_file_path = 'Desktop/Android_Applications/z4.zip'
apk_file_name = '8baea2e83cfc696a8ff9186f48d0da2f3192acb7c17267964117b5e947a05768.apk'
password = 'infected'
p4,h4,c4 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p4,h4)

zip_file_path = 'Desktop/Android_Applications/z5.zip'
apk_file_name = 'b2becb9ae44822f4786e28fc66392763e3e04ee9fd2bb40a8268bcb3b61fa21e.apk'
password = 'infected'
p5,h5,c5 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p5,h5)

zip_file_path = 'Desktop/Android_Applications/z6.zip'
apk_file_name = 'e974bfe5c6bacbe466b3bb8fef673b32fd7dc4a6cfbbe1e8260b5776af1ce145.apk'
password = 'infected'
p6,h6,c6 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p6,h6)

zip_file_path = 'Desktop/Android_Applications/z7.zip'
apk_file_name = '5ee35ee38e2003eb6cc81cff6ebdc2b09578353e99ceab6b50eff263dfad5bdd.apk'
password = 'infected'
p7,h7,c7 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p7,h7)

zip_file_path = 'Desktop/Android_Applications/z8.zip'
apk_file_name = '7220e6a20070b87761df7eb9443a5dd840e20bc2419c30692e6caf6a9dcbe2e4.apk'
password = 'infected'
p8,h8,c8 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p8,h8)

zip_file_path = 'Desktop/Android_Applications/z9.zip'
apk_file_name = '47d22f33aefee3a368b99e5a781cdc7afd4c6679fe366b3ce62eb8e52cbb4a50.apk'
password = 'infected'
p9,h9,c9 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p9,h9)

zip_file_path = 'Desktop/Android_Applications/z10.zip'
apk_file_name = 'c95c263eac60b4ad40aef40bcf2a2436019e6e53355d5677233cedb90a7e167c.apk'
password = 'infected'
p10,h10,c10 = malware_extract_apk_features(zip_file_path,apk_file_name,password)
updateFrame(p10,h10)


apk_file_path = 'Desktop/Android_Applications/Cabify.apk'
p11,h11,c11 = extract_apk_features(apk_file_path)
updateFrame(p11,h11)

apk_file_path = 'Desktop/Android_Applications/Fever.apk'
p12,h12,c12 = extract_apk_features(apk_file_path)
updateFrame(p12,h12)

apk_file_path = 'Desktop/Android_Applications/GrocerApp.apk'
p13,h13,c13 = extract_apk_features(apk_file_path)
updateFrame(p13,h13)

apk_file_path = 'Desktop/Android_Applications/MediaWorld.apk'
p14,h14,c14 = extract_apk_features(apk_file_path)
updateFrame(p14,h14)

apk_file_path = 'Desktop/Android_Applications/Pingo.apk'
p15,h15,c15 = extract_apk_features(apk_file_path)
updateFrame(p15,h15)

apk_file_path = 'Desktop/Android_Applications/Popeyes.apk'
p16,h16,c16 = extract_apk_features(apk_file_path)
updateFrame(p16,h16)

apk_file_path = 'Desktop/Android_Applications/Public.apk'
p17,h17,c17 = extract_apk_features(apk_file_path)
updateFrame(p17,h17)

apk_file_path = 'Desktop/Android_Applications/StudyDrive.apk'
p18,h18,c18 = extract_apk_features(apk_file_path)
updateFrame(p18,h18)

apk_file_path = 'Desktop/Android_Applications/Citizen.apk'
p19,h19,c19 = extract_apk_features(apk_file_path)
updateFrame(p19,h19)

apk_file_path = 'Desktop/Android_Applications/Yandex.apk'
p20,h20,c20 = extract_apk_features(apk_file_path)
updateFrame(p20,h20)

"""
alist = []
for permission in df.columns:
   if permission not in alist:
     alist.append(permission)
   else:
      print("Duplicated")
      break
    
   if permission in p1 and df.loc[h1,permission] == 1:
      print("Progressing... \n")
      continue
   elif permission in p1 and df.loc[h1,permission] == 0:
      print("Error1")
      print(permission)
      break
   elif permission not in p1 and df.loc[h1,permission] == 1:
      print("Error2")
      print(permission)
      break
   elif permission not in p1 and df.loc[h1,permission] == 0:
      print("Progressing... \n")
      continue
"""

for permission in p20:
   if permission not in df.columns:
      print("error")
      print(permission)
      break
   else:
      print("Progressing...")

df['class'] = [c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20]
#print(df)

#excel_file_path = "Desktop/spreadsheet.xlsx"
#df.to_excel(excel_file_path, index=True)


   
